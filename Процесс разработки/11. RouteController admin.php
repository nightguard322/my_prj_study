<?php
//Если до начала значения ключа alias в массиве admin в строке 
//$address_str кол-во символов = длине PATH
if(strpos($address_str, $this->routes['admin']['alias'] ) === strlen(PATH)){

   $url = explode('/', substr($address_str, strlen(PATH . $this->routes['admin']['alias']) + 1)); 

   //1.обрезаем строку от корня (PATH) + слово (aliace) admin + "/" (начало строки - от PATH . $this->routes['admin']['alias']) + 1)

   //2.Далее, т.к. плагины будут лежать по адресу host/admin/plugin/controller/далее, нужно проверить, не лежит ли
   // в 0-м элементе плагин
   if($url[0] && is_dir($_SERVER['DOCUMENT_ROOT'] . PATH . $this->routes['plugins']['path'] . $url[0])){ - //условие совпадет,
    //если это плагин (есть такая папка с названием плагина)!!!!
    
    //Если 0 элемент существует и если есть директория для него с таким же именем по пути:
    //$_SERVER['DOCUMENT_ROOT'](корневая папка)->path(корень сайта)->настройка,
    // в которой путь к папке с плагинами-> название папки плагина

        $plugin = array_shift($url); // вытаскиваем название плагина и массив нумеруется снова с 0

        $pluginSettings =  $this->routes['settings']['path'] . usfirst($plugin . 'Settings'); //Формируем имя файла плагина.
          //Настройки должны называться с большой буквы и к нему прикреплено название Settings
        
        if(file_exists($_SERVER['DOCUMENT_ROOT'] . PATH . $pluginSettings . '.php')){ //Проверяем наличие файла настроек
            //(У нас пример - ShopSettings.php)
            //Далее необходимо переопределить настройки в св-ве this-routes (т.к. в настройках ShopSettings может быть что то
            //переопределено)
            // Делаем из $pluginSettings namespace для вызова класса настроек ShopSettings
            $pluginSettings = str_replace('/', '\\', $pluginSettings);
            $this->routes = $pluginSettings::get('routes');//получаем свойства плагина (переопределенные)

            // Далее, для хранения контроллеров могут быть использованы папки, для того, чтобы потом определить место
            //хранения контроллера - мы эти папки должны найти

            $dir = $this->routes['plugins']['dir'] ? '/' . $this->routes['plugins']['dir'] . '/' : '/'; //ищем папку,
            //если есть - пишем /папка/, если нет - /
            $dir = str_replace('//', '/', $dir); // меняем // на /, если в настройках прописаны лишние /
            $this->controller = $this->routes['plugins']['path'] . $plugin . $dir; //определяем нахождение контроллера
            //для обработки плагина

            $hrUrl = $this->routes['plugins']['hrUrl']; //Проверка, исп-ся ли ЧПУ

            $route = 'plugins';
            
        }

   }else{ //если это не плагин, но по прежнему адмипанель
        $this->controller = $this->routes['admin']['path']; //в св-во конт-р добавляем путь к папке контроллеров админпанели

        $hrUrl = $this->routes['admin']['hrUrl']; //Проверка, исп-ся ли ЧПУ

        $route = 'admin';
   }



}else{
    $url = explode('/', substr($address_str, strlen(PATH)));
}

// Далее, после отработки метода createRoute() создаем набор параметров (пример: domen/admin/controller/iphone-6s/color/red),
// нужно понять, что делать с параметрами (iphone-6s), до этого мы работали с [0] - ой ячейкой (в данном примере - controller)

//Если мы с ЧПУ - идет контроллер, потом alias -ссылка (iphone-6s), потом параметр - color/ далее параметр может быть, а 
//может не быть (red)

//iphone-6 - единичный элемент

//или пример с новостям - domen/news/title_news_1/color/red/id/4
//где title_news_1 - единичный параметр, а далее параметры ключ-значение (color/red/id/4)!!!!!

//После createRoute необходимо генерировать свойство с массивом с параметрами

// Параметры после получения адресной строки хранятся в 0 элементе $url
//Если в 1 эл-те что то есть - то мы можем работать с этими параметрами, иначе свойство параметров - пустое

if($url[1]){
    $count = count($url); //считаем кол-во элементов в массиве для уменьшения нагрузки на сервер в цикле for для перехода
    //на следующую итерацию 
    $key = ''; //начальное значение, для того, чтобы можно было первое значение в адресной строке определеить как параметр
    //вторым идет значение, н-р color/red - color - параметр, red - значение

    if(!$hrUrl){
        $i = 1;  //с какого элемента осуществлять обход, ведь без ЧПУ у нас нет постоянного параметра после контроллера,
        //а только ключ - значение
    } 
    else{
        $this->$parameters['alias'] = $url[1];  //в ранее объявленом св-ве создаем ячейку массива, куда помещаем 
        //объект ЧПУ
        $i = 2;
    }

    for(; $i < $count; $i++){ //первого значения $i нет, оно определено выше
        if(!$key){ //если этот "переключатель" пустой - перед нами параметр
            $key = $url[$i]; // определеяем имя параметра из адресной строки
            $this->parameters[$key] = ''; //создаем ключ с таким именем в массиве настроек с пустым значением
        }else{
            $this->parameters[$key] = $url[$i]; // на следующей итерации "переключатель" уже имеет значение, теперь мы видим,
            //что перед нами значение параметра, присваиваем его определенному выше ключу в массиве настроек
            $key = ''; // обнуляем переключатель
        }
    }
}
